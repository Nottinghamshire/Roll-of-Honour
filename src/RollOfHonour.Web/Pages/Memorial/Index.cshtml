@page
@using Core.Enums;
@using Shared.Components;
@model RollOfHonour.Web.Pages.Memorial.IndexModel

<section class="panel with-background bg-app">
    <div class="container is-fluid">

        <div class="columns is-multiline is-vcentered">
            <div class="column">
                <div class="text-block">
                    <h1>War Memorials</h1>
                    <p>Our database includes a list of all the war memorials in and around Nottinghamshire. You can use this page to view our records alphabetically, or use our <a href="/search" title="Search our records">Search</a> page to narrow down your search.</p>
                </div>
            </div>
            @(await Html.RenderComponentAsync<IndexSearchComponent>(RenderMode.ServerPrerendered, new { SelectedQueryType = QueryType.Memorial }))
        </div>

        <div class="index-block">
            <div class="columns is-multiline">
                @foreach (var memorial in Model.Memorials)
                {
                    <div class="column is-12-mobile is-6-tablet is-6-desktop is-4-widescreen is-3-fullhd">
                        <a asp-page="/Memorial/Details" asp-route-id="@memorial.Id" class="index-card memorial" title="Learn about @memorial.Name">
                            <div class="columns is-mobile">
                                <div class="column is-4-mobile">
                                    <div class="picture-block index-picture">
                                        <div class="picture-border">
                                            <div class="picture-embed" style="background-image: url(@memorial.MainPhoto?.ImageUriMedium);"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="column">
                                    <!-- Is it possible to get a string length check on the memorial name, then add a class if it's greater than 30 characters? There is such a variation in the length of these things that I can't find a way to style them all consistently - I've used the class name "long" in this example -->
                                    @if (memorial.Name.Length > 30)
                                    {
                                        <span class="memorial-name long">@memorial.Name</span>
                                    }
                                    else
                                    {
                                        <span class="memorial-name">@memorial.Name</span>
                                    }

                                    @if (memorial.NamesCount < 1)
                                    {
                                        <span class="unit"></span>
                                    }
                                    @if (memorial.NamesCount == 1)
                                    {
                                        <span class="unit">@memorial.NamesCount Name</span>
                                    }
                                    else
                                    {
                                        <span class="unit">@memorial.NamesCount Names</span>
                                    }

                                    <span class="unit">@memorial.District</span>
                                    <span class="link"><i class="fal fa-glasses"></i> Learn more</span>
                                </div>
                            </div>
                        </a>
                    </div>
                }

            </div>

            <vc:pagination-component current-page=@Model.PageNumber page-count=@Model.Memorials.TotalPages
                slug="/memorial/index">
            </vc:pagination-component>

        </div>
    </div>
</section>