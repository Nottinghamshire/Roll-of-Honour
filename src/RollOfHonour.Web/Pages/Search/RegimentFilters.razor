@using RollOfHonour.Core.Models.Search;

<div class="search-filter-block">
    <span class="filter-label">
        Filter by regiment
    </span>
    <div class="filter-block">
        @if (ShowRegiments)
        {
            <a href="#" title="Hide regiments" class="expand-search" @onclick="@Show">
                <i class="fas fa-chevron-double-up"></i>
                <span class="expand-text">Hide all regiments</span>
            </a>
        }
        else
        {
            <a href="#" title="Show regiments" class="expand-search" @onclick="@Show">
                <i class="fas fa-chevron-double-down"></i>
                <span class="expand-text">Show regiments</span>
            </a>
        }
    </div>

    <ul class="button-list search-expand" hidden="@(!ShowRegiments)">
        @foreach (var regiment in Regiments)
        {
            <li>
                <div class="button_checkbox">
                    <input type="checkbox" @onchange="_ => UpdateRegiment(regiment.RegimentId)" id="@regiment.Regiment">
                    <label for="@regiment.Regiment">@regiment.Regiment</label>
                </div>
            </li>
        }
    </ul>
</div>

@code
{
    [Parameter]
    public List<RegimentFilter> Regiments { get; set; } = new();

    [Parameter]
    public EventCallback<int> ToggleRegiment { get; set; }

    private async Task UpdateRegiment(int regimentId)
    {
        if (ToggleRegiment.HasDelegate)
        {
            await ToggleRegiment.InvokeAsync(regimentId);
        }
    }

    private bool ShowRegiments { get; set; } = false;

    private void Show()
    {
        ShowRegiments = !ShowRegiments;
    }

    protected override void OnInitialized()
    {
        ShowRegiments = !Regiments.Any() || Regiments.Count <= 6;
    }
}