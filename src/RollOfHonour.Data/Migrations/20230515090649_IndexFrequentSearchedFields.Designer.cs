// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using RollOfHonour.Data.Context;

#nullable disable

namespace RollOfHonour.Data.Migrations
{
    [DbContext(typeof(RollOfHonourContext))]
    [Migration("20230515090649_IndexFrequentSearchedFields")]
    partial class IndexFrequentSearchedFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DecorationPersons", b =>
                {
                    b.Property<int>("Decoration_Id")
                        .HasColumnType("int");

                    b.Property<int>("Person_Id")
                        .HasColumnType("int");

                    b.HasKey("Decoration_Id", "Person_Id")
                        .HasName("PK_dbo.DecorationPersons");

                    b.HasIndex(new[] { "Decoration_Id" }, "IX_Decoration_Id");

                    b.HasIndex(new[] { "Person_Id" }, "IX_Person_Id");

                    b.ToTable("DecorationPersons");
                });

            modelBuilder.Entity("DecorationRecordedNames", b =>
                {
                    b.Property<int>("Decoration_Id")
                        .HasColumnType("int");

                    b.Property<int>("RecordedName_Id")
                        .HasColumnType("int");

                    b.HasKey("Decoration_Id", "RecordedName_Id")
                        .HasName("PK_dbo.DecorationRecordedNames");

                    b.HasIndex(new[] { "Decoration_Id" }, "IX_Decoration_Id");

                    b.HasIndex(new[] { "RecordedName_Id" }, "IX_RecordedName_Id");

                    b.ToTable("DecorationRecordedNames");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.ArmedService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_dbo.ArmedServices");

                    b.ToTable("ArmedServices");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.AuditItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("When")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_dbo.AuditItems");

                    b.HasIndex(new[] { "UserId" }, "IX_UserId");

                    b.ToTable("AuditItems");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.DataProblem", b =>
                {
                    b.Property<int>("DataProblemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DataProblemId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("RecordedNameId")
                        .HasColumnType("int");

                    b.Property<int?>("SubmittedByUserProfileId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmittedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("WarMemorialId")
                        .HasColumnType("int");

                    b.HasKey("DataProblemId")
                        .HasName("PK_dbo.DataProblems");

                    b.ToTable("DataProblems");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.DataProblemAuditItem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("DataProblemId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_dbo.DataProblemAuditItems");

                    b.HasIndex(new[] { "DataProblemId" }, "IX_DataProblemId");

                    b.HasIndex(new[] { "Id" }, "IX_Id");

                    b.ToTable("DataProblemAuditItems");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.Decoration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Decorations");

                    b.ToTable("Decorations");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressAtEnlistment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AgeAtDeath")
                        .HasColumnType("int");

                    b.Property<int?>("ArmedServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ArmedService_Id");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Cwgc")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOfDeath")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EmploymentHobbies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstNames")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("MainPhotoId")
                        .HasColumnType("int");

                    b.Property<string>("MilitaryHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ServiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("WarId")
                        .HasColumnType("int")
                        .HasColumnName("War_Id");

                    b.HasKey("Id")
                        .HasName("PK_dbo.People");

                    b.HasIndex("DateOfBirth");

                    b.HasIndex("DateOfDeath");

                    b.HasIndex("FirstNames");

                    b.HasIndex("LastName");

                    b.HasIndex("Rank");

                    b.HasIndex(new[] { "ArmedServiceId" }, "IX_ArmedService_Id");

                    b.HasIndex(new[] { "MainPhotoId" }, "IX_MainPhotoId");

                    b.HasIndex(new[] { "SubUnitId" }, "IX_SubUnitId");

                    b.HasIndex(new[] { "WarId" }, "IX_War_Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.PersonAuditItem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_dbo.PersonAuditItems");

                    b.HasIndex(new[] { "Id" }, "IX_Id");

                    b.HasIndex(new[] { "PersonId" }, "IX_PersonId");

                    b.ToTable("PersonAuditItems");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.PersonModeration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Accepted")
                        .HasColumnType("bit");

                    b.Property<string>("AddressAtEnlistment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AgeAtDeath")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Cwgc")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOfDeath")
                        .HasColumnType("datetime");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EmploymentHobbies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilitaryHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModerationComplete")
                        .HasColumnType("datetime");

                    b.Property<string>("ModeratorFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModeratorId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubUnitId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_dbo.PersonModerations");

                    b.HasIndex(new[] { "PersonId" }, "IX_PersonId");

                    b.HasIndex(new[] { "SubUnitId" }, "IX_SubUnitId");

                    b.HasIndex(new[] { "UserId" }, "IX_UserId");

                    b.ToTable("PersonModerations");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("WarMemorialId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Photos");

                    b.HasIndex(new[] { "PersonId" }, "IX_PersonId");

                    b.HasIndex(new[] { "WarMemorialId" }, "IX_WarMemorialId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.PhotoAuditItem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("PhotoId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_dbo.PhotoAuditItems");

                    b.HasIndex(new[] { "Id" }, "IX_Id");

                    b.HasIndex(new[] { "PhotoId" }, "IX_PhotoId");

                    b.ToTable("PhotoAuditItems");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.PhotoModeration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Accepted")
                        .HasColumnType("bit");

                    b.Property<string>("Copyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModerationComplete")
                        .HasColumnType("datetime");

                    b.Property<string>("ModeratorFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModeratorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("WarMemorialId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_dbo.PhotoModerations");

                    b.HasIndex(new[] { "PersonId" }, "IX_PersonId");

                    b.HasIndex(new[] { "UserId" }, "IX_UserId");

                    b.HasIndex(new[] { "WarMemorialId" }, "IX_WarMemorialId");

                    b.ToTable("PhotoModerations");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.RecordedName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArmedServiceId")
                        .HasColumnType("int");

                    b.Property<string>("AsRecorded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IwmnameRefNo")
                        .HasColumnType("int")
                        .HasColumnName("IWMNameRefNo");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Rank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("WarId")
                        .HasColumnType("int");

                    b.Property<int>("WarMemorialId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_dbo.RecordedNames");

                    b.HasIndex(new[] { "ArmedServiceId" }, "IX_ArmedServiceId");

                    b.HasIndex(new[] { "PersonId" }, "IX_PersonId");

                    b.HasIndex(new[] { "SubUnitId" }, "IX_SubUnitId");

                    b.HasIndex(new[] { "WarId" }, "IX_WarId");

                    b.HasIndex(new[] { "WarMemorialId" }, "IX_WarMemorialId");

                    b.ToTable("RecordedNames");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.RecordedNameAuditItem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("RecordedNameId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_dbo.RecordedNameAuditItems");

                    b.HasIndex(new[] { "Id" }, "IX_Id");

                    b.HasIndex(new[] { "RecordedNameId" }, "IX_RecordedNameId");

                    b.ToTable("RecordedNameAuditItems");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.Regiment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Regiments");

                    b.ToTable("Regiments");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.SubUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("RegimentId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_dbo.SubUnits");

                    b.HasIndex("Name");

                    b.HasIndex(new[] { "RegimentId" }, "IX_RegimentId");

                    b.ToTable("SubUnits");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.UserProfile", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId")
                        .HasName("PK_dbo.UserProfile");

                    b.ToTable("UserProfile", (string)null);
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.War", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EndYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartYear")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Wars");

                    b.ToTable("Wars");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.WarMemorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Easting")
                        .HasColumnType("int");

                    b.Property<Geometry>("Location")
                        .HasColumnType("geography");

                    b.Property<int?>("MainPhotoId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("NamesCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("Northing")
                        .HasColumnType("int");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ukniwmref")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UKNIWMRef");

                    b.HasKey("Id")
                        .HasName("PK_dbo.WarMemorials");

                    b.HasIndex("Name");

                    b.HasIndex(new[] { "MainPhotoId" }, "IX_MainPhotoId");

                    b.ToTable("WarMemorials");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.WarMemorialAuditItem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("WarMemorialId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_dbo.WarMemorialAuditItems");

                    b.HasIndex(new[] { "Id" }, "IX_Id");

                    b.HasIndex(new[] { "WarMemorialId" }, "IX_WarMemorialId");

                    b.ToTable("WarMemorialAuditItems");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.WebpagesMembership", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmationToken")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LastPasswordFailureDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("PasswordChangedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PasswordFailuresSinceLastSuccess")
                        .HasColumnType("int");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PasswordVerificationToken")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("PasswordVerificationTokenExpirationDate")
                        .HasColumnType("datetime");

                    b.HasKey("UserId")
                        .HasName("PK__webpages__1788CC4C4AB81AF0");

                    b.ToTable("webpages_Membership", (string)null);
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.WebpagesOauthMembership", b =>
                {
                    b.Property<string>("Provider")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ProviderUserId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Provider", "ProviderUserId")
                        .HasName("PK__webpages__F53FC0ED46E78A0C");

                    b.ToTable("webpages_OAuthMembership", (string)null);
                });

            modelBuilder.Entity("UserProfileWarMemorial", b =>
                {
                    b.Property<int>("UserProfileUserId")
                        .HasColumnType("int");

                    b.Property<int>("WarMemorialId")
                        .HasColumnType("int");

                    b.HasKey("UserProfileUserId", "WarMemorialId")
                        .HasName("PK_dbo.UserProfileWarMemorials");

                    b.HasIndex(new[] { "UserProfileUserId" }, "IX_UserProfile_UserId");

                    b.HasIndex(new[] { "WarMemorialId" }, "IX_WarMemorial_Id");

                    b.ToTable("UserProfileWarMemorial");
                });

            modelBuilder.Entity("DecorationPersons", b =>
                {
                    b.HasOne("RollOfHonour.Data.Models.DB.Decoration", null)
                        .WithMany()
                        .HasForeignKey("Decoration_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.DecorationPersons_dbo.Decorations_Decoration_Id");

                    b.HasOne("RollOfHonour.Data.Models.DB.Person", null)
                        .WithMany()
                        .HasForeignKey("Person_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.DecorationPersons_dbo.People_Person_Id");
                });

            modelBuilder.Entity("DecorationRecordedNames", b =>
                {
                    b.HasOne("RollOfHonour.Data.Models.DB.Decoration", null)
                        .WithMany()
                        .HasForeignKey("Decoration_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.DecorationRecordedNames_dbo.Decorations_Decoration_Id");

                    b.HasOne("RollOfHonour.Data.Models.DB.RecordedName", null)
                        .WithMany()
                        .HasForeignKey("RecordedName_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.DecorationRecordedNames_dbo.RecordedNames_RecordedName_Id");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.AuditItem", b =>
                {
                    b.HasOne("RollOfHonour.Data.Models.DB.UserProfile", "User")
                        .WithMany("AuditItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.AuditItems_dbo.UserProfile_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.DataProblemAuditItem", b =>
                {
                    b.HasOne("RollOfHonour.Data.Models.DB.DataProblem", "DataProblem")
                        .WithMany("DataProblemAuditItems")
                        .HasForeignKey("DataProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.DataProblemAuditItems_dbo.DataProblems_DataProblemId");

                    b.HasOne("RollOfHonour.Data.Models.DB.AuditItem", "IdNavigation")
                        .WithOne("DataProblemAuditItem")
                        .HasForeignKey("RollOfHonour.Data.Models.DB.DataProblemAuditItem", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.DataProblemAuditItems_dbo.AuditItems_Id");

                    b.Navigation("DataProblem");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.Person", b =>
                {
                    b.HasOne("RollOfHonour.Data.Models.DB.ArmedService", "ArmedService")
                        .WithMany("People")
                        .HasForeignKey("ArmedServiceId")
                        .HasConstraintName("FK_dbo.People_dbo.ArmedServices_ArmedService_Id");

                    b.HasOne("RollOfHonour.Data.Models.DB.Photo", "MainPhoto")
                        .WithMany("People")
                        .HasForeignKey("MainPhotoId")
                        .HasConstraintName("FK_dbo.People_dbo.Photos_MainPhotoId");

                    b.HasOne("RollOfHonour.Data.Models.DB.SubUnit", "SubUnit")
                        .WithMany("People")
                        .HasForeignKey("SubUnitId")
                        .HasConstraintName("FK_dbo.People_dbo.SubUnits_SubUnitId");

                    b.HasOne("RollOfHonour.Data.Models.DB.War", "War")
                        .WithMany("People")
                        .HasForeignKey("WarId")
                        .HasConstraintName("FK_dbo.People_dbo.Wars_War_Id");

                    b.Navigation("ArmedService");

                    b.Navigation("MainPhoto");

                    b.Navigation("SubUnit");

                    b.Navigation("War");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.PersonAuditItem", b =>
                {
                    b.HasOne("RollOfHonour.Data.Models.DB.AuditItem", "IdNavigation")
                        .WithOne("PersonAuditItem")
                        .HasForeignKey("RollOfHonour.Data.Models.DB.PersonAuditItem", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.PersonAuditItems_dbo.AuditItems_Id");

                    b.HasOne("RollOfHonour.Data.Models.DB.Person", "Person")
                        .WithMany("PersonAuditItems")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.PersonAuditItems_dbo.People_PersonId");

                    b.Navigation("IdNavigation");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.PersonModeration", b =>
                {
                    b.HasOne("RollOfHonour.Data.Models.DB.Person", "Person")
                        .WithMany("PersonModerations")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.PersonModerations_dbo.People_PersonId");

                    b.HasOne("RollOfHonour.Data.Models.DB.SubUnit", "SubUnit")
                        .WithMany("PersonModerations")
                        .HasForeignKey("SubUnitId")
                        .HasConstraintName("FK_dbo.PersonModerations_dbo.SubUnits_SubUnitId");

                    b.HasOne("RollOfHonour.Data.Models.DB.UserProfile", "User")
                        .WithMany("PersonModerations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.PersonModerations_dbo.UserProfile_UserId");

                    b.Navigation("Person");

                    b.Navigation("SubUnit");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.Photo", b =>
                {
                    b.HasOne("RollOfHonour.Data.Models.DB.Person", "Person")
                        .WithMany("Photos")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_dbo.Photos_dbo.People_PersonId");

                    b.HasOne("RollOfHonour.Data.Models.DB.WarMemorial", "WarMemorial")
                        .WithMany("Photos")
                        .HasForeignKey("WarMemorialId")
                        .HasConstraintName("FK_dbo.Photos_dbo.WarMemorials_WarMemorialId");

                    b.Navigation("Person");

                    b.Navigation("WarMemorial");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.PhotoAuditItem", b =>
                {
                    b.HasOne("RollOfHonour.Data.Models.DB.AuditItem", "IdNavigation")
                        .WithOne("PhotoAuditItem")
                        .HasForeignKey("RollOfHonour.Data.Models.DB.PhotoAuditItem", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.PhotoAuditItems_dbo.AuditItems_Id");

                    b.HasOne("RollOfHonour.Data.Models.DB.Photo", "Photo")
                        .WithMany("PhotoAuditItems")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.PhotoAuditItems_dbo.Photos_PhotoId");

                    b.Navigation("IdNavigation");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.PhotoModeration", b =>
                {
                    b.HasOne("RollOfHonour.Data.Models.DB.Person", "Person")
                        .WithMany("PhotoModerations")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_dbo.PhotoModerations_dbo.People_PersonId");

                    b.HasOne("RollOfHonour.Data.Models.DB.UserProfile", "User")
                        .WithMany("PhotoModerations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.PhotoModerations_dbo.UserProfile_UserId");

                    b.HasOne("RollOfHonour.Data.Models.DB.WarMemorial", "WarMemorial")
                        .WithMany("PhotoModerations")
                        .HasForeignKey("WarMemorialId")
                        .HasConstraintName("FK_dbo.PhotoModerations_dbo.WarMemorials_WarMemorialId");

                    b.Navigation("Person");

                    b.Navigation("User");

                    b.Navigation("WarMemorial");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.RecordedName", b =>
                {
                    b.HasOne("RollOfHonour.Data.Models.DB.ArmedService", "ArmedService")
                        .WithMany("RecordedNames")
                        .HasForeignKey("ArmedServiceId")
                        .HasConstraintName("FK_dbo.RecordedNames_dbo.ArmedServices_ArmedServiceId");

                    b.HasOne("RollOfHonour.Data.Models.DB.Person", "Person")
                        .WithMany("RecordedNames")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_dbo.RecordedNames_dbo.People_PersonId");

                    b.HasOne("RollOfHonour.Data.Models.DB.SubUnit", "SubUnit")
                        .WithMany("RecordedNames")
                        .HasForeignKey("SubUnitId")
                        .HasConstraintName("FK_dbo.RecordedNames_dbo.SubUnits_SubUnitId");

                    b.HasOne("RollOfHonour.Data.Models.DB.War", "War")
                        .WithMany("RecordedNames")
                        .HasForeignKey("WarId")
                        .HasConstraintName("FK_dbo.RecordedNames_dbo.Wars_WarId");

                    b.HasOne("RollOfHonour.Data.Models.DB.WarMemorial", "WarMemorial")
                        .WithMany("RecordedNames")
                        .HasForeignKey("WarMemorialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.RecordedNames_dbo.WarMemorials_WarMemorialId");

                    b.Navigation("ArmedService");

                    b.Navigation("Person");

                    b.Navigation("SubUnit");

                    b.Navigation("War");

                    b.Navigation("WarMemorial");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.RecordedNameAuditItem", b =>
                {
                    b.HasOne("RollOfHonour.Data.Models.DB.AuditItem", "IdNavigation")
                        .WithOne("RecordedNameAuditItem")
                        .HasForeignKey("RollOfHonour.Data.Models.DB.RecordedNameAuditItem", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.RecordedNameAuditItems_dbo.AuditItems_Id");

                    b.HasOne("RollOfHonour.Data.Models.DB.RecordedName", "RecordedName")
                        .WithMany("RecordedNameAuditItems")
                        .HasForeignKey("RecordedNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.RecordedNameAuditItems_dbo.RecordedNames_RecordedNameId");

                    b.Navigation("IdNavigation");

                    b.Navigation("RecordedName");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.SubUnit", b =>
                {
                    b.HasOne("RollOfHonour.Data.Models.DB.Regiment", "Regiment")
                        .WithMany("SubUnits")
                        .HasForeignKey("RegimentId")
                        .HasConstraintName("FK_dbo.SubUnits_dbo.Regiments_RegimentId");

                    b.Navigation("Regiment");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.WarMemorialAuditItem", b =>
                {
                    b.HasOne("RollOfHonour.Data.Models.DB.AuditItem", "IdNavigation")
                        .WithOne("WarMemorialAuditItem")
                        .HasForeignKey("RollOfHonour.Data.Models.DB.WarMemorialAuditItem", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.WarMemorialAuditItems_dbo.AuditItems_Id");

                    b.HasOne("RollOfHonour.Data.Models.DB.WarMemorial", "WarMemorial")
                        .WithMany("WarMemorialAuditItems")
                        .HasForeignKey("WarMemorialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.WarMemorialAuditItems_dbo.WarMemorials_WarMemorialId");

                    b.Navigation("IdNavigation");

                    b.Navigation("WarMemorial");
                });

            modelBuilder.Entity("UserProfileWarMemorial", b =>
                {
                    b.HasOne("RollOfHonour.Data.Models.DB.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserProfileUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.UserProfileWarMemorials_dbo.UserProfile_UserProfile_UserId");

                    b.HasOne("RollOfHonour.Data.Models.DB.WarMemorial", null)
                        .WithMany()
                        .HasForeignKey("WarMemorialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.UserProfileWarMemorials_dbo.WarMemorials_WarMemorial_Id");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.ArmedService", b =>
                {
                    b.Navigation("People");

                    b.Navigation("RecordedNames");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.AuditItem", b =>
                {
                    b.Navigation("DataProblemAuditItem");

                    b.Navigation("PersonAuditItem");

                    b.Navigation("PhotoAuditItem");

                    b.Navigation("RecordedNameAuditItem");

                    b.Navigation("WarMemorialAuditItem");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.DataProblem", b =>
                {
                    b.Navigation("DataProblemAuditItems");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.Person", b =>
                {
                    b.Navigation("PersonAuditItems");

                    b.Navigation("PersonModerations");

                    b.Navigation("PhotoModerations");

                    b.Navigation("Photos");

                    b.Navigation("RecordedNames");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.Photo", b =>
                {
                    b.Navigation("People");

                    b.Navigation("PhotoAuditItems");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.RecordedName", b =>
                {
                    b.Navigation("RecordedNameAuditItems");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.Regiment", b =>
                {
                    b.Navigation("SubUnits");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.SubUnit", b =>
                {
                    b.Navigation("People");

                    b.Navigation("PersonModerations");

                    b.Navigation("RecordedNames");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.UserProfile", b =>
                {
                    b.Navigation("AuditItems");

                    b.Navigation("PersonModerations");

                    b.Navigation("PhotoModerations");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.War", b =>
                {
                    b.Navigation("People");

                    b.Navigation("RecordedNames");
                });

            modelBuilder.Entity("RollOfHonour.Data.Models.DB.WarMemorial", b =>
                {
                    b.Navigation("PhotoModerations");

                    b.Navigation("Photos");

                    b.Navigation("RecordedNames");

                    b.Navigation("WarMemorialAuditItems");
                });
#pragma warning restore 612, 618
        }
    }
}
